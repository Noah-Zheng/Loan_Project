ggtitle('Price')
library(ggplot2)
library(ggplot2)
?qplot
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
library(gridExtra)
p1 <- qplot(data = dd, x = price) +
ggtitle('Price')
dd <- diamonds
p1 <- qplot(data = dd, x = price) +
ggtitle('Price')
p2 <- qplot(data = dd, x = log(price)) +
ggtitle('Price(log10)')
grid.arrange(p1,p2, ncol = 1)
library(ggplot2)
library(gridExtra)
p1 <- qplot(data = dd, x = price, binwidth = 100) +
ggtitle('Price')
p2 <- qplot(data = dd, x = log(price), binwidth = 100) +
ggtitle('Price(log10)')
grid.arrange(p1,p2, ncol = 1)
library(ggplot2)
library(gridExtra)
p1 <- qplot(data = dd, x = price, binwidth = 100) +
ggtitle('Price')
p2 <- qplot(data = dd, x = log(price), binwidth = 0.01) +
ggtitle('Price(log10)')
grid.arrange(p1,p2, ncol = 1)
p3 <- qplot(data = dd, x = price, binwidth = 0.01) +
scale_x_log10()
grid.arrange(p1,p2,p3, ncol = 1)
p1 <- qplot(data = dd, x = price, binwidth = 100, col = 258) +
ggtitle('Price')
grid.arrange(p1,p2,p3, ncol = 1)
p2 <- qplot(data = dd, x = log(price), binwidth = 0.01, col = 515) +
ggtitle('Price(log10)')
grid.arrange(p1,p2,p3, ncol = 1)
p2 <- qplot(data = dd, x = log(price), binwidth = 0.01, col = 448) +
ggtitle('Price(log10)')
grid.arrange(p1,p2,p3, ncol = 1)
p1 <- qplot(data = dd, x = price, binwidth = 100, color = 455) +
ggtitle('Price')
grid.arrange(p1,p2,p3, ncol = 1)
p1 <- qplot(data = dd, x = price, binwidth = 100) +
ggtitle('Price')
p2 <- qplot(data = dd, x = log(price), binwidth = 0.01) +
ggtitle('Price(log10)')
grid.arrange(p1,p2,p3, ncol = 1)
?scale_x_continuous
?scale_x_continuous()
?log10_trans
library(ggplot2)
diamonds
?scale_y_countious
?scale_y_continuous
dd <- diamonds
qplot(carat, price, data = dd) +
scale_y_continuous(trans = "log10")
?cuberot
?cuberoot
?table
head(sort(table(dd$carat), decreasing = T))
head(sort(table(dd$price), decreasing = T))
?geom_point
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha = 1/100, size = I(.5), position = position_jitter()) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
View(cuberoot_trans)
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha = 1/100, size = I(.5), position = position_jitter()) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
m1 <- lm(I(log(price)) ~ I(carat^(1/3)), data = diamonds)
m2 <- update(m1, ~ . + carat)
m3 <- update(m2, ~ . + cut)
m4 <- update(m3, ~ . + color)
m5 <- update(m4, ~ . + clarity)
mtable(m1, m2, m3, m4, m5)
?table
?mtable
View(m1)
m1
m2
predict
?predict
View(m4)
?with
?sd
dat = data.frame(m4$model, m4$residuals)
with(dat, sd(m4.residuals))
with(subset(dat, carat > .9 & carat < 1.1), sd(m4.residuals))
View(dat)
dat$resid <- as.numeric(dat$m4.residuals)
ggplot(aes(y = resid, x = round(carat, 2)), data = dat) +
geom_line(stat = "summary", fun.y = sd)
?round
head(round(dat$carat, 2))
dd <- read.csv("prosperLoanData.csv")
str(dd)
head(dd)
setwd("C:/Users/Noah/Desktop/Project")
dd <- read.csv("prosperLoanData.csv")
str(dd)
head(dd)
summary(dd$ListingCreationDate)
str(dd$ListingCreationDate)
summary(dd$LoanOriginationDate)
range(dd$LoanOriginationDate)
#Select data, trim the date with only date
col_index <- c(5,6,7,11,16,17,18,19,29,33,36,37,39,65,66,82)
dd_s <- dd[, col_index]
View(dd)
dd_s <- dd[, 5，6，7]
dd_s <- dd[, (5，6，7)]
dd_s <- dd[, c(5，6，7)]
dd_s <- dd[col_index, ]
View(dd_s)
dd_s <- dd[ , col_index]
library(dplyr)
dd2 <- dd %>% select(,col_index)
dd2 <- dd %>% select(1,col_index)
dd2 <- dd %>% select( , c(5,6,7,11,16,17,18,19,29,33,36,37,39,65,66,82))
dd2 <- dd[, c(5,6,7,11,16,17,18,19,29,33,36,37,39,65,66,82)]
dd2 <- dd[, c(5,82)]
dd2 <- dd[, c(2,8)]
dd2 <- dd[, c(2,8,90)]
dd2 <- dd[, c(2,8,81)]
dd2 <- dd[, c(5,6,7)]
View(dd2)
col_index <- col_index - 1
dd_s <- dd[, col_index]
rm(dd2)
View(dd_s)
summary(dd_s)
setwd("C:/Users/Noah/Desktop/Project")
dd <- read.csv("prosperLoanData.csv")
head(dd)
#Select data, trim the date with only date
col_index <- c(5,6,7,11,16,17,18,19,29,33,36,37,39,65,66,82)
col_index <- col_index - 1
dd_s <- dd[, col_index]
summary(dd_s)
table(dd_s$Term)
table(dd_s$ProsperScore)
#ggpair
library(ggpair)
install.packages("ggpair")
install.packages("ggpairs")
install.packages("GGally")
ggpairs(dd_s)
#ggpair
library(GGally)
ggpairs(dd_s)
#ggpair
library(ggplot2)
library(GGally)
ggpairs(dd_s)
#Select data, trim the date with only date
col_index <- c(5,6,7,11,16,65)
col_index <- col_index - 1
dd_s <- dd[, col_index]
summary(dd_s)
table(dd_s$Term)
table(dd_s$ProsperScore)
#ggpair
library(ggplot2)
library(GGally)
ggpairs(dd_s)
qplot(data = dd_s, x = CreditGrade)
knitr::opts_chunk$set(echo = TRUE)
qplot(data = dd_s, x = CreditGrade)
ggpairs(dd_s)
#ggpair
library(ggplot2)
library(GGally)
ggpairs(dd_s)
ggsave("univariateplot.png")
qplot(data = dd_s, x = ProsperRating)
qplot(data = dd_s, x = ProsperRating(Alpha))
names(dd_s)
qplot(data = dd_s, x = ProsperRating..Appha)
names(dd_s)
qplot(data = dd_s, x = ProsperRating..Appha.)
qplot(data = dd_s, x = "ProsperRating(Alpha)")
ggplot(dd_s, aes(x = "ProsperRating(Alpha)")) +
geom_histogram()
ggplot(dd_s, aes(x = "ProsperRating(Alpha)")) +
geom_histogram(stat = "count")
ggplot(dd_s, aes(x = "ProsperRating(Alpha)")) +
geom_histogram(stat = "count", binwidth = 1)
names(dd_s)
colnames(dd_s)[5] = "ProsperRating"
names(dd_s)
ggplot(dd_s, aes(x = ProsperRating) +
geom_histogram(stat = "count", binwidth = 1)
table(dd_s)
table(dd_s$ProsperRating)
View(dd_s)
#Select data, trim the date with only date
col_index <- c(5,6,7,11,15,65)
col_index <- col_index - 1
dd_s <- dd[, col_index]
names(dd_s)
colnames(dd_s)[5] = "ProsperRating"
summary(dd_s)
table(dd_s$Term)
table(dd_s$ProsperScore)
dd_s2 <- subset(dd_s, !is.na(ProsperRating))
#ggpair
library(ggplot2)
library(GGally)
ggpairs(dd_s)
#Select data, trim the date with only date
col_index <- c(6,7,11,15,65)
col_index <- col_index - 1
dd_s <- dd[, col_index]
names(dd_s)
colnames(dd_s)[5] = "ProsperRating"
dd_s <- subset(dd_s, !is.na(ProsperRating))
rm(dd_s2)
#ggpair
library(ggplot2)
library(GGally)
ggpairs(dd_s)
ggsave("univariateplot.png")
View(dd_s)
#Select data, trim the date with only date
col_index <- c(6,7,11,15,65)
col_index <- col_index - 1
dd_s <- dd[, col_index]
names(dd_s)
colnames(dd_s)[5] = "ProsperRating"
dd_s <- subset(dd_s, !is.na(ProsperRating))
#Select data, trim the date with only date
col_index <- c(6,7,11,15,65)
col_index <- col_index - 1
dd_s <- dd[, col_index]
names(dd_s)
colnames(dd_s)[4] = "ProsperRating"
dd_s <- subset(dd_s, !is.na(ProsperRating))
#ggpair
library(ggplot2)
library(GGally)
ggpairs(dd_s)
ggsave("univariateplot.png")
ggplot(dd_s, aes(x = ProsperRating) +
geom_histogram(stat = "count", binwidth = 1)
table(dd_s$ProsperRating)
ggplot(dd_s, aes(x = ProsperRating) +
geom_histogram(stat = "count", binwidth = 1)
ggplot(dd_s, aes(x = ProsperRating) +
geom_histogram()
ggplot(dd_s, aes(x = ProsperRating)) +
geom_histogram()
ggplot(dd_s, aes(x = ProsperRating)) +
geom_histogram(binwidth = 1)
ggplot(dd_s, aes(x = ProsperRating)) +
geom_histogram()
ggplot(dd_s, aes(x = ProsperRating)) +
geom_histogram(breaks = seq(0,7,1))
ggplot(dd_s, aes(x = ProsperRating)) +
geom_histogram(breaks = seq(0,7,2))
ggplot(dd_s, aes(x = ProsperRating)) +
geom_histogram()
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line()
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_point()
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(stat = "summary", fun.y = mean)
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(aes(color = LoanStatus), stat = "summary", fun.y = mean)
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(aes(color = Term), stat = "summary", fun.y = mean)
qplot(data=dd_s, LoanStatus)
qplot(data=dd_s, LoanStatus/length(LoanStatus))
qplot(data=dd_s, LoanStatus)
range(dd_s$LoanStatus)
length(dd_s$LoanStatus)
qplot(data=dd_s, LoanStatus)
table(dd_s$LoanStatus)
qplot(data=dd_s, LoanStatus)
qplot(data=dd_s, LoanStatus)
table(dd_s$LoanStatus)
summary(dd_s$ProsperRating)
qplot(data=dd_s, LenderYield) +
facet_wrap(~LoanStatus)
qplot(data = subset(dd_s, LoanStatus = "Defaulted"))
qplot(data = subset(dd_s, LoanStatus = "Defaulted"), LenderYield)
qplot(data = subset(dd_s, LoanStatus = "Defaulted"), LenderYield, binwith = 0.1)
qplot(data = subset(dd_s, LoanStatus = "Defaulted"), LenderYield, binwid = 0.1)
qplot(data = subset(dd_s, LoanStatus = "Defaulted"), LenderYield, binwidth = 0.1)
qplot(data = subset(dd_s, LoanStatus = "Defaulted"), LenderYield, binwidth = 50)
qplot(data = subset(dd_s, LoanStatus = "Defaulted"), LenderYield)
qplot(data = subset(dd_s, LoanStatus = "Completed"), LenderYield)
qplot(data = subset(dd_s, LoanStatus = Defaulted), LenderYield)
qplot(data = subset(dd_s, LoanStatus == Defaulted), LenderYield)
qplot(data = subset(dd_s, LoanStatus == "Defaulted"), LenderYield)
qplot(data = subset(dd_s, LoanStatus == "Completed"), LenderYield)
qplot(data = subset(dd_s, LoanStatus == "Defaulted"), LenderYield) +
scale_y_log10()
qplot(data = subset(dd_s, LoanStatus == "Completed"), LenderYield) +
scale_y_log10()
qplot(data = subset(dd_s, LoanStatus == "Completed"), LenderYield)
qplot(data = subset(dd_s, LoanStatus == "Defaulted"), LenderYield)
qplot(data = subset(dd_s, LoanStatus == "FinalPayInProcess"), LenderYield)
qplot(data = subset(dd_s, LoanStatus == "FinalPaymentInProgress"), LenderYield)
qplot(data=dd_s, LenderYield) +
facet_wrap(~LoanStatus, scales="free") +
scale_y_continuous()
View(dd_s)
ggplot(dd_s, aes(LenderYield, LoanOriginalAmount)) +
geom_point()
ggplot(dd_s, aes(LenderYield, LoanOriginalAmount)) +
geom_point(alpha = 1/5, position = position_jitter())
ggplot(dd_s, aes(LenderYield, LoanOriginalAmount)) +
geom_point(alpha = 1/20, position = position_jitter())
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/20, position = position_jitter())
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/20, position = position_jitter())+
geom_line(stat = "summary", fun.y="mean")
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/20, position = position_jitter())+
geom_line(stat = "summary", fun.y="mean", color = I(1))
geom_line(stat = "summary", fun.y= median, color = "orange"
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/20, position = position_jitter())+
geom_line(stat = "summary", fun.y= "median", color = "orange")
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/20, position = position_jitter())+
geom_line(stat = "summary", fun.y= "median", color = "orange") +
geom_smooth(color = "red")
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/20, position = position_jitter())+
geom_line(aes(color = Term), stat = "summary", fun.y= "median", color = "orange") +
geom_smooth(color = "red")
names(dd_s)
str(dd_s)
str(dd_s)
str(dd_s)
summary(dd_s)
ggplot(dd_s, aes(x = ProsperRating)) +
geom_histogram()
#
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_point()
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_boxplot()
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_boxplot() +
facet_wrap(~ProsperRating)
```{r echo=FALSE, message=False, warning=FALSE}
ggplot(dd_s, aes(LenderYield, ProsperRating)) +
geom_point() +
facet_wrap(~ProsperRating)
ggplot(dd_s, aes(LenderYield, ProsperRating)) +
geom_point()
ggplot(dd_s, aes(x = LenderYield)) +
geom_point() +
facet_wrap(~ProperRating)
ggplot(dd_s, aes(LenderYield, ProsperRating)) +
geom_point()
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_() +
facet_wrap(~ProsperRating)
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_point(alpha = 1/50, position = position_jitter()) +
facet_wrap(~ProsperRating)
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_point(alpha = 1/50, position = position_jitter())
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(stat = "summary", fun.y = mean)
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(stat = "summary", fun.y = "median")
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(aes(color = LoanStatus), stat = "summary", fun.y = mean)
qplot(data=dd_s, LenderYield) +
facet_wrap(~LoanStatus, scales="free") +
scale_y_continuous()
qplot(data=dd_s, LenderYield) +
facet_wrap(~LoanStatus, scales="free")
qplot(data = subset(dd_s, LoanStatus == "Defaulted"), LenderYield)
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/20, position = position_jitter())+
geom_line(stat = "summary", fun.y= "median", color = "orange") +
geom_smooth(color = "red")
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/50, position = position_jitter())+
geom_line(stat = "summary", fun.y= "median", color = "orange") +
geom_smooth(color = "red")
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/50, position = position_jitter())+
geom_line(stat = "summary", fun.y= "median", color = "orange") +
geom_smooth(color = "red") +
facet_wrap(~LoanStatus)
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/50, position = position_jitter())+
geom_line(stat = "summary", fun.y= "median", color = "orange") +
geom_smooth(color = "red") +
facet_wrap(~LoanStatus)
ggplot(dd_s, aes(LoanOriginalAmount, LenderYield)) +
geom_point(alpha = 1/50, position = position_jitter())+
geom_line(stat = "summary", fun.y= "median", color = "orange") +
geom_smooth(color = "red")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_point()
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(color = Term, stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(aes(color = Term), stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean") +
facet_wrap(~LoanStatus)
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(aes(color = LoanStatus), stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(aes(color = LoanStatus), stat = "summary", fun.y = "mean")
#combine all past due in one.
dd_s$Status <- dd_s$LoanStatus
View(dd_s)
str(dd_s)
levels(dd_s$Status)["Past Due" %in% levels(dd_s$Status) ] <- "Past Due"
levels(dd_s$Status)
levels(dd_s$Status)["Past Due" %in% levels(dd_s$Status)]
levels(dd_s$Status)[levels(dd_s$Status) %in%  "Past Due (1-15 days)"]
levels(dd_s$Status)
levels(dd_s$Status)[7:12]
levels(dd_s$Status)[7:12] <- "Past Due"
levels(dd_s$Status)
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(aes(color = Status), stat = "summary", fun.y = mean)
qplot(data=dd_s, LenderYield) +
facet_wrap(~Status, scales="free")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(aes(color = Status), stat = "summary", fun.y = "mean")
knitr::opts_chunk$set(echo = FALSE)
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_point(alpha = 1/100, position = position_jitter())
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_point(alpha = 1/50, position = position_jitter())
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .95))
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .99))
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, 1))
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .99))
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(aes(color = Status), stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .99))
ggplot(dd_s, aes(ProsperRating, LenderYield)) +
geom_line(aes(color = Status), stat = "summary", fun.y = mean)
qplot(data=dd_s, LenderYield) +
facet_wrap(~Status, scales="free")
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_line(aes(color = Status), stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .99))
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_point(alpha = 1/50, position = position_jitter()) +
geom_line(aes(color = Status), stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .99))
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_point(alpha = 1/100, position = position_jitter()) +
geom_line(aes(color = Status), stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .99))
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_point(alpha = 1/100, position = position_jitter(), color = "grey") +
geom_line(aes(color = Status), stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .99))
ggplot(dd_s, aes(ProsperRating, LoanOriginalAmount)) +
geom_point(alpha = 1/100, position = position_jitter()) +
geom_line(aes(color = Status), stat = "summary", fun.y = "mean") +
ylim(0,quantile(dd_s$LoanOriginalAmount, .99))
